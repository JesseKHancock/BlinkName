// -----------------------------------
// Controlling LEDs over the Internet
// -----------------------------------

/* First, let's create our "shorthand" for the pins
Same as in the Blink an LED example:
led1 is D6, led2 is D7 */

int led1 = D6;
int led2 = D7;

void dot(int pin)
{
    digitalWrite(pin, HIGH);
    delay(500);
    digitalWrite(pin, LOW);
}

void dash(int pin)
{
    digitalWrite(pin, HIGH);
    delay(1500);
    digitalWrite(pin, LOW); 
}
    
    
void setup()
{

   // Here's the pin configuration, same as last time
   pinMode(led1, OUTPUT);
   pinMode(led2, OUTPUT);

}


/* Last time, we wanted to continously blink the LED on and off
Since we're waiting for input through the cloud this time,
we don't actually need to put anything in the loop */

void loop() {
// This is for J
dot(led2);
delay(500);
dash(led2);
delay(500);
dash(led2);
delay(500);
dash(led2);

delay(1500);
// This is for E
dot(led2);

delay(1500);
// This is for S
for (int i = 1; i <=3; i++)
{
   dot(led2);
   delay(500);
}
// This is for S
for (int i = 1; i <=3; i++)
{
   dot(led2);
   delay(500);
}

delay(1500);
// This is for E
dot(led2);

delay(1500);
}

int ledToggle(String command) {
    /* Particle.functions always take a string as an argument and return an integer.
    Since we can pass a string, it means that we can give the program commands on how the function should be used.
    In this case, telling the function "on" will turn the LED on and telling it "off" will turn the LED off.
    Then, the function returns a value to us to let us know what happened.
    In this case, it will return 1 for the LEDs turning on, 0 for the LEDs turning off,
    and -1 if we received a totally bogus command that didn't do anything to the LEDs.
    */

    if (command=="on") {
        digitalWrite(led1,HIGH);
        digitalWrite(led2,HIGH);
        return 1;
    }
    else if (command=="off") {
        digitalWrite(led1,LOW);
        digitalWrite(led2,LOW);
        return 0;
    }
    else {
        return -1;
    }
}
